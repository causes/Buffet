#!/usr/bin/env ruby

require 'drb'
require 'fileutils'

if File.exist? 'Gemfile'
  require 'rubygems'
  require 'bundler/setup'
end

if ENV['BUFFET_MASTER'].to_s.strip.empty?
  puts 'BUFFET_MASTER environment variable not defined'
  exit 1
elsif ENV['BUFFET_PROJECT'].to_s.strip.empty?
  puts 'BUFFET_MASTER environment variable not defined'
  exit 1
end

# NOTE: ARGV is used by the spec runner. If I leave the drb server address
# in ARGV, rspec will think it's an argument to the test runner.
buffet_server = DRbObject.new_with_uri(ARGV.shift)
slave_name = ARGV.shift

FileUtils.mkdir_p('./tmp')

require 'rspec'
require File.expand_path('rspec2_formatter', File.dirname(__FILE__))

begin
  require 'ci/reporter/rspec'
  use_ci_reporter = true
rescue LoadError
end

RSpec::Core::Formatters::AugmentedTextFormatter.configure buffet_server, slave_name
RSpec::Core::Runner.disable_autorun!
rspec_opts = ['--format', 'RSpec::Core::Formatters::AugmentedTextFormatter']
rspec_opts += ['--format', 'CI::Reporter::RSpec'] if use_ci_reporter

while file = buffet_server.next_file_for(slave_name, file)
  RSpec::Core::CommandLine.new(rspec_opts.dup << file).
    run($stderr, $stdout)
  RSpec.world.example_groups.clear
end
